<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="/sites/Anugamdev/SiteAssets/AnugamStyles/css/main.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css"
      rel="stylesheet">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<link href="/sites/Anugamdev/SiteAssets/AnugamStyles/Datatable/css/dataTables.bootstrap.min.css" rel="stylesheet">
<link href="/sites/Anugamdev/SiteAssets/AnugamStyles/Datatable/css/responsive.bootstrap.min.css" rel="stylesheet">

<link href="/sites/Anugamdev/SiteAssets/AnugamStyles/Datepicker/css/custom.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css" rel="stylesheet">


<style>
    .clear {
        clear: both;
    }

    .opacity-0 {
        opacity: 0;
    }

    .padding-0 {
        padding: 0 !important;
    }

    .margin-0 {
        margin: 0 !important;
    }

    .margin-top-0 {
        margin-top: 0 !important;
    }

    .margin-bottom-0 {
        margin-bottom: 0 !important;
    }

    .margin-top-5 {
        margin-top: 5px !important;
    }

    .margin-top-10 {
        margin-top: 10px !important;
    }

    .margin-top-15 {
        margin-top: 15px !important;
    }

    .form-control-style-1 {
        background-color: #d5ecd5 !important;
        border: 1px solid #a9d4a9 !important;
    }

    .border-style-1 {
        border: 1px solid #e3e3e3;
        padding: 10px;
        border-radius: 4px;
    }

    .requiredfieldsstyle {
        padding-left: 15px !important;
        font-size: 12px;
        font-style: italic;
    }
</style>
<div>
    <div class="col-md-12 padding-0 page-content-header-style-1">
        <h1 style="font-size:25px !important; margin-left:9px !important; margin-right:0px !important; margin-top:0px !important;margin-bottom:0px !important;">
		Activity Feedback Form 
        </h1>
    </div>
    <button type="button" class="dashboard-button" onclick="goToLink();" id="Tesging" style="display:none;">Go To Link</button>
    <div class="col-md-12 padding-0-xs">
        <div class="col-md-12 margin-top-15 padding-0">
            <div class="col-md-8">
                <label>
                    Program Name
                </label>
                <p class="form-control form-control-style-1" id="ProgramNameBind">
                </p>
            </div>
            <div class="col-md-4">
                <label>
                    Day
                </label>
                <input type="text" class="form-control form-control-style-1" id="ProgramActSDateBind" readonly="readonly" />
            </div>
        </div>
        <div class="col-md-12 margin-top-15 padding-0" style="display:none">
            <div class="col-md-8">
                <label>
                    Program Location
                </label>
                <input type="text" class="form-control form-control-style-1" id="ProgramLocation" readonly="readonly" />
            </div>
            <div class="col-md-2">
                <label>
                    Start Date
                </label>
                <input type="text" class="form-control form-control-style-1" id="PSdate" readonly="readonly" />
            </div>
            <div class="col-md-2">
                <label>
                    End Date
                </label>
                <input type="text" class="form-control form-control-style-1" id="PEdate" readonly="readonly" />
            </div>
        </div>
        <div class="col-md-12 margin-top-15 padding-0" style="display:none">
            <div class="col-md-4">
                <label>
                    Employee Name
                </label>
                <input type="text" class="form-control form-control-style-1" id="EmployeeName" readonly="readonly" />
            </div>
            <div class="col-md-4">
                <label>
                    Ecode
                </label>
                <input type="text" class="form-control form-control-style-1" id="EmployeeECode" readonly="readonly" />
            </div>
            <div class="col-md-4">
                <label>
                    Base Location
                </label>
                <input type="text" class="form-control form-control-style-1" id="EmployeeBaseLocation" readonly="readonly" />
            </div>
        </div>
        <div class=" clear"></div>
        <div class="col-md-12 padding-0 margin-top-15">
            <div id="divErrorMessage" class="requiredfieldsstyle"></div>
        </div>
    </div>
    <div class=" clear"></div>
    <div class="padding-0-xs margin-top-15" id="speakerdetialsbind">
    </div>

    <div class=" clear"></div>
    <div class="col-md-12 margin-top-15 padding-0-xs">
        <div class="col-md-2">
            <button class="btn btn-success btn-block" id="btnSubmit" type="button">
                SUBMIT
            </button>
        </div>


    </div>


</div>

<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="/sites/Anugamdev/SiteAssets/AnugamStyles/Datepicker/js/moment.min.js"></script>
<script src="/sites/Anugamdev/SiteAssets/AnugamStyles/Datepicker/js/daterangepicker.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/js/bootstrap-timepicker.js"></script>

<script>
    var UserOffice = "";
    var UserOfficeNew = "";
    var EmailOfUser = "";
    var ProgramName = "";
    var UserLoginEmailId = "";
    $.ajax({
        async: false,
        url: _spPageContextInfo.webServerRelativeUrl + "//_api/SP.UserProfiles.PeopleManager/GetMyProperties",
        method: "GET",
        headers: {
            "accept": "application/json;odata=verbose"
        },
        success: function (d) {
            //UserOffice = d.d.Office;
            UserOfficeNew = d.d.UserProfileProperties.results[60].Value;
            UserOffice = d.d.UserProfileProperties.results[61].Value;
            EmailOfUser = d.d.Email;
            UserLoginEmailId = d.d.UserProfileProperties.results[19].Value.toUpperCase();
        },
        error: function (err) {
            alert(JSON.stringify(err));
        }
    });
    function getQueryStrings() {
        var assoc = {};
        var decode = function (s) { return decodeURIComponent(s.replace(/\+/g, " ")); };
        var queryString = location.search.substring(1);
        var keyValues = queryString.split('&');

        for (var i in keyValues) {
            var key = keyValues[i].split('=');
            if (key.length > 1) {
                assoc[decode(key[0])] = decode(key[1]);
            }
        }

        return assoc;
    }
    var qs = getQueryStrings();
    var ProgramID = qs["InvitatioD"];
    var ActID = "";
    var appWebUrl = window.location.protocol + "//" + window.location.host + _spPageContextInfo.webServerRelativeUrl;
    var ProgramName; var ProgramInvitationID; var empCode; var EmployeeName; var EmpLocation; var programLoc = "";
    $.ajax({
        async: false,
        url: appWebUrl + "/_api/web/lists/getbytitle('EmailNotification')/items(" + ProgramID + ")",
        type: "GET",
        headers: {
            "accept": "application/json;odata=verbose",
            "content-type": "application/json;odata=verbose",
            "x-requestdigest": $("#__requestdigest").val(),
        },
        success: function (d) {
            var UserWithoutDomain = EmailOfUser.substring(0, EmailOfUser.lastIndexOf("@"));
            var res = UserWithoutDomain.toUpperCase();
            var eMailID = d.d.EmployeeEmailId;
            var EcodeUpper = eMailID.toUpperCase();

            if (d.d.ID == ProgramID && d.d.FeedBackStatus != "Completed" && EcodeUpper == EmailOfUser.toUpperCase() || EcodeUpper == UserLoginEmailId) {
                ProgramName = d.d.ProgramName;
                programLoc = d.d.ProgramLocation;
                ProgramInvitationID = d.d.ProgramNameId;
                var EmployeeCode = d.d.EmployeeCode;
                empCode = EmployeeCode.toString();
                EmployeeName = d.d.EmployeeName;
                EmpLocation = d.d.EmpLocation;
                var ACTDayNoTes = d.d.ACTDayNo;
                ActID = d.d.ACTDayNo;
                $("#ProgramNameBind").append(ProgramName);
                $("#ProgramLocation").val(programLoc);
                $("#EmployeeName").val(EmployeeName);
                $("#EmployeeECode").val(EmployeeCode);
                $("#ProgramActSDateBind").val(ACTDayNoTes);
                if (UserOffice != "" && UserOffice != null || UserOfficeNew != "" && UserOfficeNew != null) {
                    $("#EmployeeBaseLocation").val(UserOffice);
                }
                else {
                    $("#EmployeeBaseLocation").val(UserOfficeNew);
                }
            }
            if (d.d.ID == ProgramID && d.d.FeedBackStatus == "Completed") {
                alert("Feedback already submitted");
                window.location.href = "/sites/HR-TrainingManagementSystem/Pages/PageNotFoundError.aspx";

            }
        },
        error: function () { console.log('fail'); }
    });
    var activityID = []; iactivityID = 0; var arrSequnce = []; iarrSequnce = 0; var arrSaveActId = []; iarrSaveActId = 0;
    var arractivityName = []; iarractivityName = 0; var activityUniID = []; iactivityUniID = 0;
    if (ActID != "" && ActID != null && ProgramName != "" && ProgramName != null) {
        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('NewInductionProgram')/items?$filter=DayWise eq %27" + ActID + "%27and%20FeedBackNeed%20eq%20%27Yes%27&$orderby=actSequence%20asc",
            type: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val()
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                    if (results.Status == "Active" && results.ProgramName == ProgramName) {
                        arr[i++] = index;
                    }
                });
                for (var i = 0; i < arr.length; i++) {
                    var arrKey = arr[i];
                    activityID = d.d.results[arrKey].ActivityID;
                    arractivityName[iarractivityName++] = d.d.results[arrKey].ActivityName;
                    arrSaveActId[iarrSaveActId++] = d.d.results[arrKey].ActivityID;
                    arrSequnce[iarrSequnce++] = d.d.results[arrKey].actSequence;
                    activityUniID[iactivityUniID++] = d.d.results[arrKey].ID;
                    var ProgramStartDate = d.d.results[0].ProgramStartDate;
                    var ProgramStartDate = d.d.results[0].ProgramEndDate;
                    $('#PSdate').val(ProgramStartDate);
                    $('#PEdate').val(ProgramStartDate);

                    var SpeakerOrder = i + 1;
                    GetSpeakerDetailsBind(activityID, SpeakerOrder);
                }
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });

    }

    var Sequence = ""; var arrSequence = [];
    function GetSpeakerDetailsBind(activityID, SpeakerOrder) {
        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('FeedBackDetails')/items?$filter=ActiviTyID eq %27" + activityID + "%27",
            type: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val()
            },
            success: function (d) {
                
                 var arr = [];
            i = 0;
            $.each(d.d.results, function (index, results) {
                if (results.Status == "Active") {
                    arr[i++] = index;
                }
            });
              for (var j = 0; j < arr.length; j++) {
                   var arrConfigK = arr[j];
                   //alert(arrConfigK);
                   
                   if(arrConfigK<=0){
                var SpeakerName = d.d.results[arrConfigK].NameOfTheSpeaker +",";
                var SpeakerEmail = d.d.results[arrConfigK].SpeakerEmail +",";
                var EmployeeCode = d.d.results[arrConfigK].EmployeeCode +",";
                if(d.d.results[arrConfigK].SpeakerDepartment == null)
                {
                var SpeakerDepartment = "NA,";
                }
                else
                {
                var SpeakerDepartment = d.d.results[arrConfigK].SpeakerDepartment +",";
                }
               // alert(SpeakerDepartment)
                
                Sequence = d.d.results[arrConfigK].Sequence;
                 }
                 else if(arrConfigK>=1){

                var SpeakerName = SpeakerName + d.d.results[arrConfigK].NameOfTheSpeaker +",";
                var SpeakerEmail = SpeakerEmail +  d.d.results[arrConfigK].SpeakerEmail +",";
                var EmployeeCode = EmployeeCode + d.d.results[arrConfigK].EmployeeCode +",";
                
                if(d.d.results[arrConfigK].SpeakerDepartment ==null)
                {
                var SpeakerDepartment = "NA,"
                }
                else
                {
                var SpeakerDepartment = SpeakerDepartment + d.d.results[arrConfigK].SpeakerDepartment +",";
                }
                Sequence = d.d.results[arrConfigK].Sequence;
                 }

                 //var SpeakerName = $.trim($('SpeakerName').val());
  
                
              }
              var lastChar = SpeakerName.slice(-1);
  if (lastChar == ',') {
  SpeakerName = SpeakerName.slice(0, -1);
  }
   var lastChar1 = SpeakerEmail.slice(-1);
  if (lastChar1 == ',') {
  SpeakerEmail = SpeakerEmail.slice(0, -1);
  }
   var lastChar2 = EmployeeCode.slice(-1);
  if (lastChar2 == ',') {
  EmployeeCode = EmployeeCode.slice(0, -1);
  }
   var lastChar3 = SpeakerDepartment.slice(-1);
  if (lastChar3 == ',') {
  SpeakerDepartment = SpeakerDepartment.slice(0, -1);
  }
   


                $("#speakerdetialsbind").append('<div class="FormValidations well padding-0-xs SpeakerSeq-' + Sequence + '" id=' + Sequence + '><div class="col-md-12 margin-top-15 padding-0">'
                    + '<div class="col-md-4"><label>Speaker Name</label><p class="form-control form-control-style-1" style="width:100%;overflow-x: auto;overflow-y: auto;" id=SpeakerName' + Sequence + '>' + SpeakerName + '</p></div>'
                    + '<div class="col-md-3" style="display:none"><label>Speaker Email</label><p class="form-control form-control-style-1" id=SpeakerEmail' + Sequence + '>' + SpeakerEmail + '</p></div><div class="col-md-3" style="display:none">'
                    + '<label>Speaker Ecode</label><p class="form-control form-control-style-1" id=SpeakerECode' + Sequence + '>' + EmployeeCode + '</p></div><div class="col-md-4"><label> Speaker Department</label><p class="form-control form-control-style-1" style="width:100%;overflow-x: auto;overflow-y: auto;" id=SpeakerDept' + Sequence + '>' + SpeakerDepartment + '</p></div></div>'
                    + '<div class="col-md-12 margin-top-15 padding-0"><div class="col-md-12"><div class="col-md-12 border-style-1"><div class="col-md-7"><label class="margin-bottom-0" id=' + Sequence + '>Q1 . Content/Presentation (relevance, adherence to timeline)</label></div>'
                    + '<div class="col-md-5"><div class="FormValidationsRadio col-md-12 padding-0 validationContent' + Sequence + '" id="validationContent' + Sequence + '"><label class="radio-inline"><input type="radio" title="contentData' + Sequence + ' " class="contentData"  name="ContentRelevance' + Sequence + '" value="Can Do Better" id=' + Sequence + ' >Can Do Better</label><label class="radio-inline">'
                    + '<input type="radio" class="contentDatahide" name="ContentRelevance' + Sequence + '" value="Satisfactory" id=' + Sequence + ' >Satisfactory</label><label class="radio-inline"><input type="radio" class="contentDatahide" name="ContentRelevance' + Sequence + '" value="Good" id=' + Sequence + ' >Good</label><label class="radio-inline">'
                    + '<input type="radio" class="contentDatahide" name="ContentRelevance' + Sequence + '" value="Excellent" id=' + Sequence + ' >Excellent</label></div></div></div></div>'
                    + '<div class="col-md-12"><div class=" col-md-12 margin-top-10  border-style-1"><div class="col-md-7"><label class="margin-bottom-0" id=' + Sequence + '>Q2 . Speakers ability to engage, share knowledge & respond to questions</label></div><div class="col-md-5">'
                    + '<div class="FormValidationsRadio col-md-12 padding-0 validationSpeaker' + Sequence + '" id="validationSpeaker' + Sequence + '"><label class="radio-inline"><input title="contentData' + Sequence + ' " class="contentData" type="radio" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Can Do Better">Can Do Better</label><label class="radio-inline"><input  class="contentDatahide" type="radio" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Satisfactory">'
                    + 'Satisfactory</label><label class="radio-inline"><input type="radio" class="contentDatahide" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Good">Good</label><label class="radio-inline"><input type="radio" class="contentDatahide" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Excellent">Excellent</label></div></div></div></div>'
                    + '<div class="col-md-12 padding-0 margin-top-10" id="divCanDoBetter' + Sequence + '" style="display:none"><div class="col-md-12" ><textarea class="form-control CandobetterValidation"  maxlength="150" placeholder="Suggestions to Improve" id="txtCanDoBetter' + Sequence + '"></textarea></div></div></div><div class=" clear"></div></div>');
              
            },
            error: function () { console.log('fail'); }
        });
    }

    $('.contentData').click(function () {
        var value = $(this).val();
        var Seq = this.id;
        var i = 0;
        document.getElementById("divCanDoBetter" + Seq + "").style.display = "block";

    });


    $('.contentDatahide').click(function () {
        var value = $(this).val();
        var Seq = this.id;
        var len = 0;
        var name = $(this).attr('name');
        var lastChar = name[name.length - 1];
        var type1 = 'ContentRelevance' + lastChar;
        var type2 = 'SpeakerAbility' + lastChar;
        $('input[name="' + type1 + '"]').each(function () {
            var value = $(this).val();
            if (value == 'Can Do Better') {
                var v = $(this).is(':checked');
                if (v == true) {
                    len++;
                }
            }
        });
        $('input[name="' + type2 + '"]').each(function () {
            var value = $(this).val();
            if (value == 'Can Do Better') {
                var v = $(this).is(':checked');
                if (v == true) {
                    len++;
                }
            }
        });

        if (len == 0) {
            document.getElementById("divCanDoBetter" + Seq + "").style.display = "none";
            $('.FormValidationsRadio').css({ "border": "" });
            $("#divErrorMessage").empty();
        }
        else {
            document.getElementById("divCanDoBetter" + Seq + "").style.display = "block";
            $('.FormValidationsRadio').css({ "border": "" });
            $("#divErrorMessage").empty();
        }
    });

    $('input[type=radio][name=SpeakerAbility]').change(function () {
        var Seq = "";
        if (this.value == 'Can Do Better') {
            if (arrSequnce.length > 0) {
                for (var i = 0; i < arrSequnce.length; i++) {
                    Seq = arrSequnce[i];
                    if (this.id == Seq.toString()) {
                        document.getElementById("divCanDoBetter" + Seq + "").style.display = "block";
                    }
                }
            }
        }
        else {
            var Seq = "";
            if (arrSequnce.length > 0) {
                for (var i = 0; i < arrSequnce.length; i++) {
                    Seq = arrSequnce[i];
                    if (this.id == Seq.toString()) {
                        document.getElementById("divCanDoBetter" + Seq + "").style.display = "none";
                    }
                }
            }
        }
    });
    $("#btnSubmit").click(function () {
        $('#divErrorMessage').css('color', '');
        $('#divErrorMessage').empty();
        var Couunt = 0;
        var isvalid = true;
        var names = []
        $('input:radio').each(function () {
            var rname = $(this).attr('name');
            if ($.inArray(rname, names) == -1) names.push(rname);
        });
        var radioError = true;
        $.each(names, function (i, name) {
            var seq = name[name.length - 1];
            var NameOfRadioButton = '';
            if ($('input[name="' + name + '"]:checked').length == 0) {
                radioError = false;
                NameOfRadioButton = name.substring(0, name.length - 1);
                if (NameOfRadioButton == 'ContentRelevance') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', 'red');
                    $('#divErrorMessage').append("Highlighted fields are mandatory");
                    $('.validationContent' + seq + '').css({ "border": "1px solid red" });
                }
                if (NameOfRadioButton == 'SpeakerAbility') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', 'red');
                    $('#divErrorMessage').append("Highlighted fields are mandatory");
                    $('.validationSpeaker' + seq + '').css({ "border": "1px solid red" });
                }
            }
            else {
                if (NameOfRadioButton == 'ContentRelevance') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', '');
                    $('.validationContent' + seq + '').css({ "border": "" });
                }
                if (NameOfRadioButton == 'SpeakerAbility') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', '');
                    $('.validationSpeaker' + seq + '').css({ "border": "" });
                }
            }
        });
        $(".CandobetterValidation").each(function () {
            if ($(this).is(':hidden') == false && $(this).val() == '') {
                $('.CandobetterValidation').css({ "border": "1px solid red" });
                $("#divErrorMessage").empty();
                $('#divErrorMessage').css('color', 'red');
                $('#divErrorMessage').append("Highlighted fields are mandatory");
                Couunt++;
                return false;
            }
            else if ($(this).val() != '') {
                $('.CandobetterValidation').css({ "border": "" });
                $("#divErrorMessage").empty();
            }
        });
        if (Couunt == 0 && radioError == true) {
            if (arrSequnce.length > 0 && arrSaveActId.length > 0 && activityUniID.length > 0) {
                for (var i = 0; i < arrSequnce.length; i++) {
                    var ActUinqueID = activityUniID[i];
                    var actID = arrSaveActId[i];
                    var actName = arractivityName[i];
                    var SeqId = arrSequnce[i];
                    var SpeakerAbility = $('input[type=radio][name=SpeakerAbility' + SeqId + ']:checked').attr('id');
                    var ContentRelevance = $('input[type=radio][name=ContentRelevance' + SeqId + ']:checked').attr('id');
                    var SpekerAbValue = $('input[type=radio][name=SpeakerAbility' + SeqId + ']:checked').val();
                    var ContentRel = $('input[type=radio][name=ContentRelevance' + SeqId + ']:checked').val();
                    var Candobetter = $('#txtCanDoBetter' + SeqId + '').val();
                    if (SpeakerAbility == SeqId.toString()) {
                        var SpeakerName = ""; var SpeakerEmail = ""; var EmployeeCode = ""; var SpeakerDepartment = ""; var SpeakerName = "";
                        $.ajax({
                            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('FeedBackDetails')/items?$filter=ActiviTyID eq %27" + actID + "%27",
                            type: "GET",
                            async: false,
                            headers: {
                                "accept": "application/json;odata=verbose",
                                "content-type": "application/json;odata=verbose",
                                "X-RequestDigest": $("#__REQUESTDIGEST").val()
                            },
                            success: function (d) {
                                //SpeakerName = d.d.results[0].NameOfTheSpeaker;
                                //SpeakerEmail = d.d.results[0].SpeakerEmail;
                                //SpeakerECode = d.d.results[0].EmployeeCode;
                                //SpeakerDepartment = d.d.results[0].SpeakerDepartment;

                                 var arr = [];
                                i2 = 0;
                                $.each(d.d.results, function (index, results) {
                                    if (results.Status == "Active") {
                                        arr[i2++] = index;
                                    }
                                });

                                for (var j = 0; j < arr.length; j++) {
                                      var arrConfigK = arr[j];
                                     //alert(arrConfigK);
                               
                                    var SpeakerName = d.d.results[arrConfigK].NameOfTheSpeaker;
                                    var SpeakerEmail = d.d.results[arrConfigK].SpeakerEmail;
                                    var SpeakerECode = d.d.results[arrConfigK].EmployeeCode;
                                    var SpeakerDepartment = d.d.results[arrConfigK].SpeakerDepartment;
                                    InsertFeedBack(actID, actName, arrSequnce, SpekerAbValue, ContentRel, SpeakerName, SpeakerEmail, SpeakerECode, SpeakerDepartment, Candobetter, ActUinqueID);
                                    }
                            },
                            error: function () { console.log('fail'); }
                        });
                       // InsertFeedBack(actID, actName, arrSequnce, SpekerAbValue, ContentRel, SpeakerName, SpeakerEmail, SpeakerECode, SpeakerDepartment, Candobetter, ActUinqueID);
                    }
                }
            }
            var actDayDate = $('#ProgramActSDateBind').val();
            var EmpCode = $('#EmployeeECode').val();
            var actDate = $('#ProgramActSDateBind').val();
            var getUserUniqueID = GetMisReportUserUniqueID(actDayDate, EmpCode, ProgramName);
            if (getUserUniqueID != '' && getUserUniqueID != null) {
                UpdateMisReportUserDetails(getUserUniqueID);
            }
            var qs = getQueryStrings();
            var ProgramID = qs["InvitatioD"];
            EmailDetailUpdate(ProgramID);
        }
    });
    var FeedBackUniqueID = ""; var BaseLocation = ""; var Department = "";

    var ProgramName; var ProgramInvitationID; var empCode; var EmployeeName; var EmpLocation;
    if (ProgramName != "" && ProgramName != null) {
        var qs = getQueryStrings();
        var ProgramID = qs["InvitatioD"];
        function InsertFeedBack(actID, actName, arrSequnce, SpekerAbValue, ContentRel, SpeakerName, SpeakerEmail, SpeakerECode, SpeakerDepartment, Candobetter, ActUinqueID) {
            var EmployeeName = $('#EmployeeName').val();
            var EmployeeECode = $('#EmployeeECode').val();;
            var EmployeeBaseLocation = $('#EmployeeBaseLocation').val();;
            var intSequnce = parseInt(arrSequnce);
            var PgmSdate = $('#PSdate').val();;
            var PgmEdate = $('#PEdate').val();;
            var actStartDay = $('#ProgramActSDateBind').val();
            var appWebUrl = _spPageContextInfo.webAbsoluteUrl;
            if (ProgramID != "" && ProgramID != "null") {
                $.ajax({
                    async: false,
                    url: appWebUrl + "/_api/web/lists/getbytitle('FeedBackTransactionDetails')/items",
                    type: "POST",
                    data: JSON.stringify({
                        '__metadata': { 'type': 'SP.Data.FeedBackTransactionDetailsListItem' },
                        'EmployeeCode': EmployeeECode,
                        'EmployeeName': EmployeeName,
                        'EmpLocation': EmployeeBaseLocation,
                        'ProgramName': ProgramName,
                        'ActivityID': actID,
                        'ActivityName': actName,
                        'SpeakerDepartment': SpeakerDepartment,
                        'SpeakerName': SpeakerName,
                        'SpeakerECode': SpeakerECode,
                        'SpeakerEmail': SpeakerEmail,
                        'Sequnce': intSequnce,
                        'ActivityDay': actStartDay,
                        'ContentRelevance': ContentRel,
                        'SpeakerAbility': SpekerAbValue,
                        'CanDoBetter': Candobetter,
                        'Status': "Completed",
                        'ProgramStartDate': PgmSdate,
                        'ProgramEndDate': PgmEdate
                    }),
                    headers: {

                        "Accept": "application/json;odata=verbose",
                        "content-type": "application/json; odata=verbose",
                        "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                    },
                    success: function (data) {
                        if (ActUinqueID != "") {
                            InductionProgramStatus(ActUinqueID);
                        }
                    },
                    error: function (err) {
                        alert("Error while adding item: " + JSON.stringify(err));
                    }
                });
            }
        }
    }

    function EmailDetailUpdate(RequestID) {
        $.ajax({
            url: _spPageContextInfo.webServerRelativeUrl + "/_api/web/lists/getbytitle('EmailNotification')/items(" + RequestID + ")",
            type: "POST",
            async: false,
            data: JSON.stringify({
                '__metadata': { 'type': 'SP.Data.EmailNotificationListItem' },
                'FeedBackStatus': "Completed",
            }),
            headers: {
                "Accept": "application/json;odata=verbose",
                "content-type": "application/json; odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                "X-HTTP-Method": "MERGE",
                "If-Match": "*"
            },
            success: function (data) {
                goToLink();
                window.location.href = 'https://bajajelect.sharepoint.com/';
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });
    }
    function InductionProgramStatus(actID) {
        $.ajax({
            url: _spPageContextInfo.webServerRelativeUrl + "/_api/web/lists/getbytitle('NewInductionProgram')/items(" + actID + ")",
            type: "POST",
            async: false,
            data: JSON.stringify({
                '__metadata': { 'type': 'SP.Data.NewInductionProgramListItem' },
                'FeedBackStatus': "Completed",
            }),
            headers: {
                "Accept": "application/json;odata=verbose",
                "content-type": "application/json; odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                "X-HTTP-Method": "MERGE",
                "If-Match": "*"
            },
            success: function (data) {
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });
    }
    function GetMisReportUserUniqueID(actDayDate, EmpCode, ProgramName) {
        var UniqueId = '';
        var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('MISReportForInvities')/items?$filter=Attendance eq 'Y' and EmpCode%20eq%20%27" + EmpCode + "%27and%20ProgramName%20eq%20%27" + ProgramName + "%27 and Day eq '" + actDayDate + "'";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
                UniqueId = d.d.results[0].ID;
            },
            error: function () { console.log('fail'); }
        });
        return UniqueId;
    }
    function UpdateMisReportUserDetails(getUserUniqueID) {
        $.ajax({
            url: _spPageContextInfo.webServerRelativeUrl + "/_api/web/lists/getbytitle('MISReportForInvities')/items(" + getUserUniqueID + ")",
            type: "POST",
            async: false,
            data: JSON.stringify({
                '__metadata': { 'type': 'SP.Data.MISReportForInvitiesListItem' },
                'FeedBackStatus': "Completed",
            }),
            headers: {
                "Accept": "application/json;odata=verbose",
                "content-type": "application/json; odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                "X-HTTP-Method": "MERGE",
                "If-Match": "*"
            },
            success: function (data) {
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });
    }
</script>
<script type="text/javascript">
    function goToLink() {
        alert("Feedback submitted successfully");
        window.location.href = 'https://bajajelect.sharepoint.com/';
    }
</script>

<script type="text/javascript">
    function RedirectioLink() {
        window.location.href = 'https://bajajelect.sharepoint.com/';
    }
</script>